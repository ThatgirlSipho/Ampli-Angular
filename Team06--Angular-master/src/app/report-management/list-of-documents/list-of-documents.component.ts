import { Component, OnInit } from '@angular/core';
import { DataService } from 'src/app/services/data.service';
import { RequiredDocument } from 'src/app/shared/sharonModelClasses/shared/RequiredDocument';
import { Employee } from 'src/app/services/model';
import { jsPDF } from 'jspdf';
import 'jspdf-autotable';

@Component({
  selector: 'app-list-of-documents',
  templateUrl: './list-of-documents.component.html',
  styleUrls: ['./list-of-documents.component.css']
})
export class ListOfDocumentsComponent implements OnInit {
  requiredDocuments: RequiredDocument[] = [];
  totalDocuments: number = 0;
  reportGenerationDate: Date = new Date();
  reportGeneratorName: string = '';
  reportGeneratorRole: string = '';

  constructor(private dataService: DataService) {}

  ngOnInit(): void {
    this.dataService.GetAllRequiredDocuments().subscribe(
      (data: RequiredDocument[]) => {
        this.requiredDocuments = data;
        this.requiredDocuments = data.map(document => ({
          ...document,
          hardcodedDescription: this.getHardcodedDescription(document.description.toString())
        }));
        this.totalDocuments = this.requiredDocuments.length; // Calculate the total number of documents
        this.reportGenerationDate = new Date(); // Set the report generation date
        this.getReportGenerator(); // Fetch the report generator's details
      },
      (error) => {
        console.error('Error fetching required documents', error);
      }
    );
  }

  getReportGenerator(): void {
    this.dataService.getCurrentUser().subscribe(
      (employee: Employee) => {
        console.log('Employee Data:', employee); // Log the entire employee object

        this.reportGeneratorName = employee.fullName;
        this.reportGeneratorRole = employee.role;
      },
      (error) => {
        console.error('Error fetching employee data', error);
        // Optionally, show user-friendly message or handle the error accordingly
      }
    );
  }

  generatePDF(): void {
    const doc = new jsPDF();
    
      // Add background image
  const backgroundImage = new Image();
  backgroundImage.src = '/assets/Portrait Dashboard.png'; 
  doc.addImage(backgroundImage, 'PNG', 0, 0, 210, 297); 
  
    // Add title
    doc.setFontSize(18);
    doc.text('List of Required Documents Report', 14, 20);

     // Add report generation date
     doc.setFontSize(12);
     doc.text(`Report Generation Date: ${this.reportGenerationDate.toLocaleDateString()}`, 14, 30);
   
    // Combine the generator's name and role
    const generatorText = `Generated by: ${this.reportGeneratorName}, ${this.reportGeneratorRole}`;

    // Add generator's details
    doc.text(generatorText, 14, 40);

    // Add a table with documents
    (doc as any).autoTable({
      startY: 60, // Start Y position for the table
      head: [['#', 'Required Document', 'Description']], // Column headers
      body: this.requiredDocuments.map(document => [
        document.requiredDocumentId.toString(),
        document.description,
        document.hardcodedDescription || 'Not Available' // Fallback text if hardcodedDescription is missing
      ]),
      theme: 'striped', // Optional: 'striped' for striped rows
      headStyles: { fillColor: [255, 0, 0] }, // Optional: Customize header row styles
      margin: { top: 60 },
    });

    // Generate the PDF as a Blob
    const pdfBlob = doc.output('blob');

    // Create a URL for the Blob
    const pdfUrl = URL.createObjectURL(pdfBlob);

    // Open the PDF in a new tab/window
    window.open(pdfUrl);

    // Optionally, trigger a download
    // const link = document.createElement('a');
    // link.href = pdfUrl;
    // link.download = 'documents-report.pdf';
    // document.body.appendChild(link);
    // link.click();
    // document.body.removeChild(link);
  }

  getHardcodedDescription(description: string): string {
    switch (description.toLowerCase()) {
      case 'valid rsa id':
        return 'This document is a valid South African Identification Document (ID) that verifies the identity of the individual.';
      case 'valid passport':
        return 'A government-issued passport document that serves as proof of identity and nationality for international travel.';
      case 'proof of residential address':
        return 'A document that verifies the residential address of the individual, such as a utility bill or lease agreement.';
      case 'proof of banking':
        return 'A document that confirms the existence of a bank account in the individual’s name, such as a bank statement or letter from the bank.';
      case 'proof of registration of regulatory body':
        return 'A certificate or document that confirms the entity is registered with the relevant regulatory body.';
      case 'income tax number':
        return 'A document that provides the individual’s or entity’s income tax number, issued by the tax authority.';
      case 'trading name of business':
        return 'A document that provides the registered trading name of the business, which may differ from the legal name.';
      case 'proof of physical business address':
        return 'A document that verifies the physical location of the business, such as a rental agreement or utility bill.';
      case 'valid permit':
        return 'An official permit that grants the individual or business permission to conduct specific activities within a jurisdiction.';
      case 'proof of local residential address':
        return 'A document that verifies the individual’s local residential address, distinct from foreign or alternative addresses.';
      case 'proof of foreign residential address':
        return 'A document that verifies the individual’s residential address outside the local jurisdiction.';
      case 'contact details and specimen signature':
        return 'A form or document that captures the individual’s contact information and provides an official signature sample.';
      case 'latest trust deed':
        return 'The most recent trust deed that outlines the terms and conditions of the trust’s operations.';
      case 'master\'s latest letter of authority':
        return 'The most recent letter of authority issued by the Master of the High Court, authorizing the trustees to act on behalf of the trust.';
      case 'proof of registered address for the trust':
        return 'A document that verifies the official registered address of the trust.';
      case 'constitution or founding document':
        return 'The constitution or founding document that outlines the purpose, structure, and governance of an organization or entity.';
      case 'partnership agreement':
        return 'A legal document that outlines the rights and responsibilities of each partner in a business partnership.';
      case 'consent to credit check':
        return 'A form that authorizes the entity to conduct a credit check on the individual or business.';
      case 'rsa id':
        return 'An official South African Identification Document (ID) issued by the Department of Home Affairs.';
      case 'passport':
        return 'A government-issued passport that serves as proof of identity and nationality.';
      case 'capitec bank resolution':
        return 'An official resolution from Capitec Bank related to specific business transactions or authorizations.';
      case 'business contact details':
        return 'A document that provides detailed contact information for the business, including phone numbers, email addresses, and physical address.';
      case 'capitec form 330':
        return 'A specific form (Form 330) issued by Capitec Bank, related to a particular banking process.';
      case 'capitec form 347':
        return 'A specific form (Form 347) issued by Capitec Bank, typically related to financial transactions or account management.';
      case 'capitec form 349':
        return 'A specific form (Form 349) issued by Capitec Bank, related to the documentation of financial operations.';
      case 'capitec remediation of fica details for non-individuals':
        return 'A form or document used by Capitec Bank for the remediation of FICA (Financial Intelligence Centre Act) compliance for non-individual entities.';
      case 'share certificate':
        return 'A legal document issued by a corporation that certifies ownership of a specific number of shares in the company.';
      case 'proof of origin of funds':
        return 'A document that verifies the source of funds used in a transaction, often required for regulatory compliance.';
      case 'fic registration number':
        return 'A unique identifier issued by the Financial Intelligence Centre (FIC) for entities that are registered under the FIC Act.';
      default:
        return 'A general document required for regulatory or compliance purposes.';
    }
}



}
